<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	<!--
		<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="/WEB-INF/jdbc.properties" /> <bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
		p:username="${jdbc.username}" p:password="${jdbc.password}" /
	-->

	<!-- ADD PERSISTENCE SUPPORT HERE (jpa, hibernate, etc) -->


	<bean id="mySQLDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="jdbcUrl">
			<value>jdbc:mysql://localhost/lika</value>
		</property>
		<property name="user">
			<value>root</value>
		</property>
		<property name="password">
			<value>root</value>
		</property>


		<property name="initialPoolSize">
			<value>2</value>
		</property>

		<property name="minPoolSize">
			<value>2</value>
		</property>

		<property name="maxPoolSize">
			<value>10</value>
		</property>

		<property name="acquireIncrement">
			<value>2</value>
		</property>

		<property name="acquireRetryAttempts">
			<value>5</value>
		</property>

		<property name="maxStatements">
			<value>10</value>
		</property>

		<property name="maxIdleTime">
			<value>180</value>
		</property>

		<property name="maxConnectionAge">
			<value>600</value>
		</property>

		<property name="idleConnectionTestPeriod">
			<value>3000</value>
		</property>

		<property name="testConnectionOnCheckin">
			<value>true</value>
		</property>

		<property name="testConnectionOnCheckout">
			<value>true</value>
		</property>


	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="mySQLDataSource" />
		<property name="configLocations" value="classpath*:hibernate.cfg.xml" />
		<property name="schemaUpdate" value="true" />

		<property name="hibernateProperties">
			<value>
				hibernate.dialect= org.hibernate.dialect.MySQLInnoDBDialect

			</value>
		</property>

	</bean>

	<!-- Transaction -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>


	<tx:annotation-driven transaction-manager="transactionManager" />
	<!--
		Activates various annotations to be detected in bean classes: Spring's
		@Required and @Autowired, as well as JSR 250's @PostConstruct,
		@PreDestroy and @Resource (if available) and JPA's @PersistenceContext
		and @PersistenceUnit (if available).
	-->
	<context:annotation-config />
	<context:component-scan base-package="lika.handler" />
	<context:component-scan base-package="lika.dao" />
	<context:component-scan base-package="lika.services" />

	<bean id="daoHandler" class="lika.handler.DaoHandler"
		factory-method="getInstance" />



	<!--
		Instruct Spring to retrieve and apply @AspectJ aspects which are
		defined as beans in this context (such as the UsageLogAspect below).

		<aop:aspectj-autoproxy/>
	-->

</beans>
